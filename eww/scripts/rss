#!/usr/bin/python3

import requests
import argparse
from xml.dom.minidom import parse

TMP_FILE = "/tmp/world-news.rss"


def download_rss():
    response = requests.get("https://www.reddit.com/r/worldnews/.rss",
                            headers={
                                "User-agent": "eww-rss-bot"
                            })

    xml_response = response.content.decode("utf-8")

    with open(TMP_FILE) as wn:
        wn.write(xml_response)


def get_entry(index: int, max_length: int):
    with open(TMP_FILE, "r") as xml_file:
        xml = parse(xml_file)

    try:
        entry = xml.getElementsByTagName("entry")[index]
        title_node = entry.getElementsByTagName("title")[0]

        title_text = title_node.firstChild.nodeValue.strip()

        if len(title_text) > max_length:
            print(title_text[:max_length - 3] + "...")
        else:
            print(title_text)
    except:
        pass


def get_link(index: int):
    with open(TMP_FILE, "r") as xml_file:
        xml = parse(xml_file)

    try:
        entry = xml.getElementsByTagName("entry")[index]
        link_node = entry.getElementsByTagName("link")[0]
        link = link_node.attributes["href"].value

        print(link)
    except:
        pass


if __name__ == "__main__":
    parser = argparse.ArgumentParser()

    parser.add_argument("action", type=str, choices=["download", "entry", "link"])
    parser.add_argument("--index", type=int)
    parser.add_argument("--max_length", type=int)

    args = parser.parse_args()

    {
        "download": lambda: download_rss(),
        "entry": lambda: get_entry(args.index, args.max_length),
        "link": lambda: get_link(args.index)
    }[args.action]()
